[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  override existing env vars with { override: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  suppress all logs with { quiet: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
[ 'sport', 'city' ]
[ 'sport', 'city' ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  specify custom .env file path with { path: '/custom/path/.env' })
PORT::INFO::LISTENING ON PORT 2000
[ undefined, undefined ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] })
PORT::INFO::LISTENING ON PORT 2000
[ 'sport', 'city' ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
[ undefined, undefined ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent committing .env to code: https://dotenvx.com/precommit)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  override existing env vars with { override: true })
PORT::INFO::LISTENING ON PORT 2000
[ 'wefawef', 'undefined' ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  specify custom .env file path with { path: '/custom/path/.env' })
PORT::INFO::LISTENING ON PORT 2000
[ 'hiwefawef', 'hiundefined' ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  override existing env vars with { override: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
[ 'wefawef', 'undefined' ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  specify custom .env file path with { path: '/custom/path/.env' })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent committing .env to code: https://dotenvx.com/precommit)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[32m[nodemon] clean exit - waiting for changes before restart[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] })
PORT::INFO::LISTENING ON PORT 2000
[ { filterParamName: 'wefawef' }, { filterParamName: 'undefined' } ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
[ { f: 'wefawef' }, { f: 'undefined' } ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  suppress all logs with { quiet: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
[ { sport: 'wefawef' }, { city: 'undefined' } ]
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent committing .env to code: https://dotenvx.com/precommit)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent committing .env to code: https://dotenvx.com/precommit)
PORT::INFO::LISTENING ON PORT 2000
{ sport: 'wefawef' }
{ city: 'undefined' }
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  override existing env vars with { override: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê encrypt with dotenvx: https://dotenvx.com)
PORT::INFO::LISTENING ON PORT 2000
Query: select * from tournaments where sport=wefawef and 
[ERROR]::QUERY_CREATION::PLAYER_FETCH_FILTERED_TOURNAMENTS: filterParamValue neither 'undefined' nor 'defined'
Query:  and 
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  suppress all logs with { quiet: true })
PORT::INFO::LISTENING ON PORT 2000
Query_inProgress: select * from tournaments where sport=wefawef and 
[ERROR]::QUERY_CREATION::PLAYER_FETCH_FILTERED_TOURNAMENTS: filterParamValue neither 'undefined' nor 'defined'
Query_final:  and 
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
PORT::INFO::LISTENING ON PORT 2000
Query_inProgress: select * from tournaments where sport=wefawef and 
[ERROR]::QUERY_CREATION::PLAYER_FETCH_FILTERED_TOURNAMENTS: filterParamValue neither 'undefined' nor 'defined'
Query_final: select * from tournaments where sport=wefawef
Query_inProgress: select * from tournaments where sport=wefawef and 
[ERROR]::QUERY_CREATION::PLAYER_FETCH_FILTERED_TOURNAMENTS: filterParamValue neither 'undefined' nor 'defined'
Query_final: select * from tournaments where sport=wefawef
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
Query_inProgress: select * from tournaments where sport=wefawef and 
[ERROR]::QUERY_CREATION::PLAYER_FETCH_FILTERED_TOURNAMENTS: filterParamValue neither 'undefined' nor 'defined'
Query_final: select * from tournaments where sport=wefawef
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
PORT::INFO::LISTENING ON PORT 2000
Query_inProgress: select * from tournaments where 
Query_inProgress: select * from tournaments where sport=wefawef and 
[ERROR]::QUERY_CREATION::PLAYER_FETCH_FILTERED_TOURNAMENTS: filterParamValue neither 'undefined' nor 'defined'
Query_final: select * from tournaments where sport=wefawef
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
Query_inProgress: select * from tournaments where 
Query_inProgress: select * from tournaments where sport=wefawef and 
Query_final: select * from tournaments where sport=wefawef
Query_inProgress: select * from tournaments where 
Query_inProgress: select * from tournaments where sport=wefawef and 
Query_final: select * from tournaments where sport=wefawef and city=rw
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  specify custom .env file path with { path: '/custom/path/.env' })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê encrypt with dotenvx: https://dotenvx.com)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  override existing env vars with { override: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport=wefawef and 
Query_final: select * from tournaments where sport=wefawef
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  suppress all logs with { quiet: true })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_final: select * from tournaments
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üõ†Ô∏è  run anywhere with `dotenvx run -- yourcommand`)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üõ†Ô∏è  run anywhere with `dotenvx run -- yourcommand`)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent committing .env to code: https://dotenvx.com/precommit)
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport=wefawef and 
Query_inProgress: select * from tournaments where sport=wefawef and city=rw and 
Query_final: select * from tournaments where sport=wefawef and city=rw
[ERROR]::QUERY_SELECT::PLAYER_FETCH_FILTERED_TOURNAMENTS: Error: Unknown column 'wefawef' in 'where clause'
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport=wefawef and 
Query_inProgress: select * from tournaments where sport=wefawef and city=rw and 
Query_final: select * from tournaments where sport=wefawef and city=rw
show: wefawef
show: rw
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport='wefawef' and 
Query_final: select * from tournaments where sport='wefawef'
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  specify custom .env file path with { path: '/custom/path/.env' })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport='wefawef' and 
Query_inProgress: select * from tournaments where sport='wefawef' and city='rw' and 
Query_final: select * from tournaments where sport='wefawef' and city='rw'
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport='ewre' and 
Query_inProgress: select * from tournaments where sport='ewre' and city='qewret' and 
Query_final: select * from tournaments where sport='ewre' and city='qewret'
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport='' and 
Query_inProgress: select * from tournaments where sport='' and city='' and 
Query_final: select * from tournaments where sport='' and city=''
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_final: select * from tournaments
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_final: select * from tournaments
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: üîê encrypt with dotenvx: https://dotenvx.com)
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  load multiple .env files with { path: ['.env.local', '.env'] })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  override existing env vars with { override: true })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  write to custom object with { processEnv: myObject })
PORT::INFO::LISTENING ON PORT 2000
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  suppress all logs with { quiet: true })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport='wefawef' and 
Query_inProgress: select * from tournaments where sport='wefawef' and city='qewret' and 
Query_final: select * from tournaments where sport='wefawef' and city='qewret'
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport='ewre' and 
Query_inProgress: select * from tournaments where sport='ewre' and city='qewret' and 
Query_final: select * from tournaments where sport='ewre' and city='qewret'
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
[dotenv@17.1.0] injecting env (4) from .env (tip: ‚öôÔ∏è  enable debug logging with { debug: true })
PORT::INFO::LISTENING ON PORT 2000
Query_start: select * from tournaments where 
Query_inProgress: select * from tournaments where sport='wefawef' and 
Query_inProgress: select * from tournaments where sport='wefawef' and city='rw' and 
Query_final: select * from tournaments where sport='wefawef' and city='rw'
